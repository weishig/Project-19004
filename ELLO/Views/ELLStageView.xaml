<UserControl x:Class="Thorlabs.Elliptec.ELLO.Views.ELLStageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:support="clr-namespace:Thorlabs.Elliptec.ELLO.Support"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Thorlabs.Elliptec.ELLO;component/Themes/ThorStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <support:BoolToVisibilityConverter x:Key="myBoolToVisibilityConverter" />
            <support:BoolToVisibilityConverter x:Key="myBoolToVisibilityConverterInverted" InvertVisibility="True" />
            <support:InverseBooleanConverter x:Key="myInverseBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Grid.IsSharedSizeScope="True">
        <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Vertical">
                <GroupBox Header="Parameters" Style="{StaticResource ThorlabsGroupBox}" Margin="5" IsEnabled="{Binding Owner.BackgroundThreadManager.IsProcessing, Converter={StaticResource myInverseBooleanConverter}}" >
                    <StackPanel Orientation="Vertical">
                        <GroupBox Style="{StaticResource ThorlabsGroupBox}" Margin="5">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Home Position (" />
                                    <TextBlock Text="{Binding Units}" Padding="0" VerticalAlignment="Center"/>
                                    <TextBlock Text=")" />
                                </StackPanel>
                            </GroupBox.Header>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_title"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_left"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_center"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_right"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Home Offset " VerticalAlignment="Center" Margin="5"/>
                                <Button Grid.Row="0" Grid.Column="1" Content="Get" Command="{Binding ClickGetHomeOffsetCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5"/>
                                <TextBox x:Name="_homeOffset" Grid.Row="0" Grid.Column="2" Width="80" Margin="2,5" PreviewTextInput="TextBox_PreviewTextInput" Text="{Binding TargetHomeOffsetStr, FallbackValue='0.0', NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalContentAlignment="Center"/>
                                <Button Grid.Row="0" Grid.Column="3" Content="Set" Command="{Binding ClickSetHomeOffsetCommand}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5" IsEnabled="{Binding ElementName=_homeOffset, Path=(Validation.HasError), Converter={StaticResource myInverseBooleanConverter}}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="Home Direction" VerticalAlignment="Center" Margin="5" Visibility="{Binding UseHomeDirection, Converter={StaticResource myBoolToVisibilityConverter}}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="3" Margin="5,2" MinWidth="80" VerticalAlignment="Center" ItemsSource="{Binding HomeDirections}" SelectedValuePath="Key" DisplayMemberPath="Value" SelectedValue="{Binding HomeDirection}" Visibility="{Binding UseHomeDirection, Converter={StaticResource myBoolToVisibilityConverter}}" HorizontalAlignment="Center"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Style="{StaticResource ThorlabsGroupBox}" Margin="5">
                            <GroupBox.Header>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Jog step size (" />
                                    <TextBlock Text="{Binding Units}" Padding="0" VerticalAlignment="Center" />
                                    <TextBlock Text=")" />
                                </StackPanel>
                            </GroupBox.Header>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_title"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_left"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_center"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="col_right"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Content="Jog Step " VerticalAlignment="Center" Margin="5"/>
                                <Button Grid.Row="0" Grid.Column="1" Content="Get" Command="{Binding ClickGetJogSizeCommand}" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Center"/>
                                <TextBox x:Name="_jogStepSize" Grid.Row="0" Grid.Column="2" Width="80" Margin="2,5" PreviewTextInput="TextBox_PreviewTextInput" Text="{Binding TargetJogStepSizeStr, FallbackValue='0.0', NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"  VerticalContentAlignment="Center"/>
                                <Button Grid.Row="0" Grid.Column="3" Content="Set" Command="{Binding ClickSetJogSizeCommand}" HorizontalAlignment="Stretch" Margin="5" VerticalAlignment="Center" IsEnabled="{Binding ElementName=_jogStepSize, Path=(Validation.HasError), Converter={StaticResource myInverseBooleanConverter}}"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center" TextAlignment="Left" Visibility="{Binding AllowContinuousJog, Converter={StaticResource myBoolToVisibilityConverter}}">
                Enter value >= 0.001 for a single jog step,<LineBreak/>
                Enter value == 0.0 for continuous rotation.
                                </TextBlock>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Style="{StaticResource ThorlabsGroupBox}" Margin="5" Visibility="{Binding AllowCleaning, Converter={StaticResource myBoolToVisibilityConverter}}">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Allow clean / optimize" />
                        </StackPanel>
                    </GroupBox.Header>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" IsEnabled="{Binding Owner.BackgroundThreadManager.IsProcessing, Converter={StaticResource myInverseBooleanConverter}}" >
                            <Button Content="Clean Machine" Command="{Binding ClickCleanMachineCommand}" Margin="5" />
                            <Button Content="Clean and Optimize" Command="{Binding ClickCleanAndOptimizeCommand}" Margin="5" />
                        </StackPanel>
                        <Button Grid.Row="1" Content="Stop " Command="{Binding ClickStopCleaningCommand}" Margin="5" IsEnabled="{Binding IsCleaning}"/>
                    </Grid>
                </GroupBox>
            </StackPanel>
            <GroupBox Header="Control" Style="{StaticResource ThorlabsGroupBox}" Margin="5" IsEnabled="{Binding Owner.BackgroundThreadManager.IsProcessing, Converter={StaticResource myInverseBooleanConverter}}" >
                <StackPanel Orientation="Vertical">
                    <GroupBox Margin="5">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Position (" />
                                <TextBlock Text="{Binding Units}" Padding="0" VerticalAlignment="Center" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2">
                                <Label Content="{Binding CurrentPositionStr}"/>
                            </Border>
                            <Button Grid.Row="1" Grid.Column="0" Content="Home" Command="{Binding ClickHomeCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" />
                            <Button Grid.Row="1" Grid.Column="1" Content="Update" Command="{Binding ClickGetPositionCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Jog" Margin="5" Visibility="{Binding IsContinuousJog, Converter={StaticResource myBoolToVisibilityConverterInverted}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button Grid.Column="0" Content="Backward" Command="{Binding ClickJogReverseCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" />
                            <Button Grid.Column="1" Content="Forward" Command="{Binding ClickJogForwardCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Header="Continuous Jog" Margin="5" Visibility="{Binding IsContinuousJog, Converter={StaticResource myBoolToVisibilityConverter}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <support:BindableButton Grid.Column="0" Content="Backward" IsPressed="{Binding ReverseButtonPressed}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" />
                            <support:BindableButton Grid.Column="1" Content="Forward" IsPressed="{Binding ForwardButtonPressed}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" />
                        </Grid>
                    </GroupBox>
                    <GroupBox Margin="5">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Move Absolute (" />
                                <TextBlock Text="{Binding Units}" Padding="0" VerticalAlignment="Center" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Position" VerticalAlignment="Center" Margin="5"/>
                            <TextBox x:Name="_targetPosition" Grid.Row="0" Grid.Column="1" Margin="5" PreviewTextInput="TextBox_PreviewTextInput" Text="{Binding TargetAbsoluteMoveStr, FallbackValue='0.0', NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalContentAlignment="Center"/>
                            <Button Grid.Row="1" Grid.Column="1" Content="Move" Command="{Binding ClickMoveAbsoluteCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" IsEnabled="{Binding ElementName=_targetPosition, Path=(Validation.HasError), Converter={StaticResource myInverseBooleanConverter}}"/>
                        </Grid>
                    </GroupBox>
                    <GroupBox Margin="5">
                        <GroupBox.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Move Relative (" />
                                <TextBlock Text="{Binding Units}" Padding="0" VerticalAlignment="Center" />
                                <TextBlock Text=")" />
                            </StackPanel>
                        </GroupBox.Header>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Step Size" VerticalAlignment="Center" Margin="5"/>
                            <TextBox x:Name="_displacement" Grid.Row="0" Grid.Column="1" Margin="5" PreviewTextInput="TextBox_PreviewTextInput" Text="{Binding TargetRelativeMoveStr, FallbackValue='0.1', NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalContentAlignment="Center"/>
                            <Button Grid.Row="1" Grid.Column="1" Content="Move" Command="{Binding ClickMoveRelativeCommand}" HorizontalAlignment="Stretch" Padding ="10,5" VerticalAlignment="Top" Margin="5" IsEnabled="{Binding ElementName=_displacement, Path=(Validation.HasError), Converter={StaticResource myInverseBooleanConverter}}"/>
                        </Grid>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </Grid>
</UserControl>
