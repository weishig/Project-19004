<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Color x:Key="ThorBannerRedColor">#F01C25</Color>
    <Color x:Key="ThorBannerBrownColor">#660000</Color>
    <Color x:Key="ThorBannerLight1Color">#A88A8A</Color>
    <Color x:Key="ThorBannerLight2Color">#EFAAAD</Color>
    <Color x:Key="ThorBannerLight3Color">GhostWhite</Color>
    <Color x:Key="ThorBannerLight4Color">#FFE0E0E0</Color>
    <Color x:Key="ThorStatusBorderColor">Green</Color>
    <Color x:Key="ThorStatusBackgroundColor">White</Color>
    <Color x:Key="ThorBackground1Color">#FFE0E0E0</Color>
    <Color x:Key="ThorBackground2Color">GhostWhite</Color>
    <Color x:Key="ThorMenuColor">LightGray</Color>
    <Color x:Key="ThorMenuBorderColor">Gray</Color>
    <Color x:Key="ThorMenuSelectedColor">Gray</Color>
    <Color x:Key="ThorLogoRedColor">#E51B24</Color>
    <Color x:Key="ThorPinkColor">#FCA4A4</Color>
    <Color x:Key="HighlightedBackgroundColor">#ED1B24</Color>
    <Color x:Key="HighlightedTextColor">LightGray</Color>
    <Color x:Key="HighlightedWhiteTextColor">White</Color>
    <Color x:Key="NormalBorderColor">LightGray</Color>
    <Color x:Key="ThorMenuTextColor">Black</Color>
    <Color x:Key="ThorlabsButtonMouseOver1Color">LightSteelBlue</Color>
    <Color x:Key="ThorlabsButtonMouseOver2Color">DarkOrange</Color>
    <Color x:Key="ThorlabsButtonIsChecked1Color">LightSteelBlue</Color>
    <Color x:Key="ThorlabsButtonIsChecked2Color">DarkOrange</Color>
    <Color x:Key="ThorlabsSeperatorColor">LightGray</Color>


    <SolidColorBrush x:Key="ThorStatusBackgroundBrush" Color="{StaticResource ThorStatusBackgroundColor}" />
    <SolidColorBrush x:Key="ThorStatusBorderBrush" Color="{StaticResource ThorStatusBorderColor}" />
    <SolidColorBrush x:Key="ThorBackground1Brush" Color="{StaticResource ThorBackground1Color}" />
    <SolidColorBrush x:Key="ThorBackground2Brush" Color="{StaticResource ThorBackground2Color}" />
    <SolidColorBrush x:Key="ThorBannerRedBrush" Color="{StaticResource ThorBannerRedColor}" />
    <SolidColorBrush x:Key="ThorBannerBrownBrush" Color="{StaticResource ThorBannerBrownColor}" />
    <SolidColorBrush x:Key="ThorlabsMenuBrush" Color="{StaticResource ThorMenuColor}" />
    <SolidColorBrush x:Key="ThorMenuBorderBrush" Color="{StaticResource ThorMenuBorderColor}" />
    <SolidColorBrush x:Key="ThorMenuSelectedBrush" Color="{StaticResource ThorMenuSelectedColor}" />
    <SolidColorBrush x:Key="ThorLogoRedBrush" Color="{StaticResource ThorLogoRedColor}" />
    <SolidColorBrush x:Key="ThorPinkBrush" Color="{StaticResource ThorPinkColor}" />
    <SolidColorBrush x:Key="ThorlabsSeperatorBrush" Color="{StaticResource ThorlabsSeperatorColor}" />

    <SolidColorBrush x:Key="ThorlabsButtonMouseOver1Brush" Color="{StaticResource ThorlabsButtonMouseOver1Color}" />
    <SolidColorBrush x:Key="ThorlabsButtonMouseOver2Brush" Color="{StaticResource HighlightedBackgroundColor}" />
    <SolidColorBrush x:Key="ThorlabsButtonIsChecked1Brush" Color="{StaticResource ThorlabsButtonIsChecked1Color}" />
    <SolidColorBrush x:Key="ThorlabsButtonIsChecked2Brush" Color="{StaticResource ThorPinkColor}" />

    <SolidColorBrush x:Key="HighlightedBackgroundBrush" Color="{StaticResource HighlightedBackgroundColor}" />
    <SolidColorBrush x:Key="MenuBackgroundBrush" Color="{StaticResource ThorMenuColor}" />
    <SolidColorBrush x:Key="NormalBorderBrush" Color="{StaticResource NormalBorderColor}" />
    <SolidColorBrush x:Key="SolidMenuFontBrush" Color="#000000" />
    <SolidColorBrush x:Key="HighlightedText" Color="{StaticResource HighlightedTextColor}" />
    <SolidColorBrush x:Key="HighlightedWhiteText" Color="{StaticResource HighlightedWhiteTextColor}" />

    <LinearGradientBrush x:Key="ThorBannerBrushLight" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorBannerLight1Color}" Offset="0" />
        <GradientStop Color="{StaticResource ThorBannerLight2Color}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ThorBannerBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorBannerBrownColor}" Offset="0" />
        <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ThorBannerBrush2" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorBannerBrownColor}" Offset="0" />
        <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.25"/>
        <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ThorBackground" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorBannerLight4Color}" Offset="0"/>
        <GradientStop Color="{StaticResource ThorBannerLight3Color}" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ThorBackgroundInverted" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorBannerLight3Color}" Offset="0" />
        <GradientStop Color="{StaticResource ThorBannerLight4Color}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ThorBackgroundDouble" EndPoint="0,1">
        <GradientStop Offset="0" Color="{StaticResource ThorBannerLight4Color}" />
        <GradientStop Offset="0.35" Color="{StaticResource ThorBannerLight3Color}" />
        <GradientStop Offset="0.85" Color="{StaticResource ThorBannerLight3Color}" />
        <GradientStop Offset="1" Color="{StaticResource ThorBannerLight4Color}" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="buttonWhiteBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="LightGray" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="splitterHorizontal" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="{x:Static SystemColors.ControlLightColor}" Offset="0"/>
        <GradientStop Color="{x:Static SystemColors.ControlColor}" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="splitterVertical" StartPoint="0,0" EndPoint="1,0">
        <GradientStop Color="{x:Static SystemColors.ControlLightColor}" Offset="0"/>
        <GradientStop Color="{x:Static SystemColors.ControlColor}" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ButtonNormalBackground2" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="#A0A0A0" Offset="0"/>
        <GradientStop Color="#E5E5E5" Offset="0.15"/>
        <GradientStop Color="#ECECEC" Offset="0.8"/>
        <GradientStop Color="#E5E5E5" Offset="1"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid>
                        <Rectangle Height="1" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border
                            Background="{StaticResource MenuBackgroundBrush}"
                            BorderBrush="{StaticResource MenuBackgroundBrush}"
                            BorderThickness="1">
                        <StackPanel ClipToBounds="True" Orientation="Horizontal" IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition x:Name="Col3" Width="14"/>
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                x:Name="HeaderHost"
                                RecognizesAccessKey="True"
                                ContentSource="Header"/>

                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                Margin="8,1,8,1"
                                x:Name="IGTHost"
                                ContentSource="InputGestureText"
                                VerticalAlignment="Center"/>

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource SolidMenuFontBrush}" BorderThickness="1" > <!--Padding="2,2,2,2"-->
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                            <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="6,1,6,1"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{StaticResource HighlightedBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                            <Setter Property="Foreground" Value="{StaticResource HighlightedText}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="false">
                            <Setter Property="Background" Value="{StaticResource MenuBackgroundBrush}" TargetName="Border"/>
                            <Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource MenuBackgroundBrush}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="GhostWhite"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Height="{TemplateBinding Height}" Fill="{StaticResource HighlightedBackgroundBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThorListHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <TextBlock Text="{TemplateBinding Content}" Padding="5" Width="{TemplateBinding Width}" Background="{StaticResource ThorBannerBrush}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{StaticResource ThorBannerBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThorlabsMenuBrush}" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <DataTemplate x:Key="ThorHeaderTemplate">
        <DockPanel>
            <TextBlock FontSize="14" Foreground="White" Text="{Binding}" HorizontalAlignment="Stretch" Margin="5,0"/>
        </DockPanel>
    </DataTemplate>

    <Style x:Key="ThorlabsDataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
    </Style>
    
    <Style x:Key="ThorlabsColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource ThorBannerBrush}" />
        <Setter Property="Foreground" Value="{StaticResource ThorlabsMenuBrush}" />
    </Style>

    <LinearGradientBrush x:Key="ThorBannerCellBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="{StaticResource ThorPinkColor}" Offset="0" />
        <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.4"/>
        <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.8"/>
        <GradientStop Color="{StaticResource ThorPinkColor}" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="ThorlabsCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontStyle"  Value="Italic" />
                <Setter Property="Foreground" Value="{StaticResource HighlightedText}" />
                <Setter Property="Background" Value="{StaticResource ThorBannerCellBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThorlabsListViewItem" TargetType="ListViewItem">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontStyle"  Value="Italic" />
                <Setter Property="Foreground" Value="{StaticResource HighlightedText}" />
                <Setter Property="Background" Value="{StaticResource ThorBannerCellBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HighlightedText}"/>
                <!--<Setter Property="FontWeight" Value="DemiBold"/>-->
                <Setter Property="Background" Value="{StaticResource ThorlabsButtonMouseOver1Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThorlabsListView" TargetType="ListView">
        <Style.Resources>
            <Style TargetType="ListViewItem" BasedOn="{StaticResource ThorlabsListViewItem}" />
            <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="0" />
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.4"/>
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.8"/>
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="0" />
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.4"/>
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.8"/>
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="1"/>
            </LinearGradientBrush>
        </Style.Resources>
    </Style>

    <Style x:Key="ThorlabsListBoxItem" TargetType="ListBoxItem">
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource SolidMenuFontBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerBrush}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontStyle"  Value="Italic" />
                <Setter Property="Foreground" Value="{StaticResource HighlightedText}" />
                <Setter Property="Background" Value="{StaticResource ThorBannerCellBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource HighlightedText}"/>
                <Setter Property="FontWeight" Value="DemiBold"/>
                <Setter Property="Background" Value="{StaticResource ThorlabsButtonMouseOver1Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ThorlabsListBox" TargetType="ListBox">
        <Style.Resources>
            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ThorlabsListBoxItem}" />
            <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="0" />
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.4"/>
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.8"/>
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="0" />
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.4"/>
                <GradientStop Color="{StaticResource ThorBannerRedColor}" Offset="0.8"/>
                <GradientStop Color="{StaticResource ThorPinkColor}" Offset="1"/>
            </LinearGradientBrush>
        </Style.Resources>
    </Style>

    <Style x:Key="ThorlabsGroupBox" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerBrush2}"/>
        <Setter Property="Padding" Value="0,5,0,0"></Setter>
    </Style>

    <Style x:Key="ThorlabsStatusBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorStatusBorderBrush}" />
        <Setter Property="Background" Value="{StaticResource ThorStatusBackgroundBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="ThorlabsSeparatorBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorlabsSeperatorBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>

    <Style x:Key="ThorlabsHorizontalSeparatorBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorlabsSeperatorBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="10,0"></Setter>
    </Style>

    <Style x:Key="ThorlabsVerticalSeparatorBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorlabsSeperatorBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,10"></Setter>
    </Style>
    
    <Style x:Key="ThorlabsDeviceBorderThick" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerRedBrush}" />
        <Setter Property="Background" Value="{StaticResource ThorBackground}"/>
        <Setter Property="BorderThickness" Value="3"/>
    </Style>

    <Style x:Key="ThorlabsDeviceBorderThin" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerRedBrush}" />
        <Setter Property="Background" Value="{StaticResource ThorBackground}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <Style x:Key="ThorlabsDeviceBorderPopup" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ThorBannerRedBrush}" />
        <Setter Property="Background" Value="{StaticResource ThorlabsMenuBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="ThorlabsInfoBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    <Style x:Key="ThorlabsInfoLabel" TargetType="Label">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="Black"></Setter>
    </Style>
    <Style x:Key="ThorlabsInfoLabelSmall" TargetType="Label">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Padding" Value="2" />
    </Style>
    <Style x:Key="ThorlabsInfoTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Foreground" Value="Black"></Setter>
        <Setter Property="Margin" Value="2"/>
    </Style>


</ResourceDictionary>